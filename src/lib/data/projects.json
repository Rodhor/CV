{
  "projects": [
    {
      "title": {
        "en": "Portfolio Website",
        "de": "Portfolio-Website"
      },
      "descriptionShort": {
        "en": "My personal website built with SvelteKit, featuring a my CV and project showcase.",
        "de": "Meine persönliche Website mit SvelteKit, die meinen Lebenslauf und eine Projektübersicht bietet."
      },
      "descriptionLong": {
        "en": "I built this portfolio with SvelteKit and TailwindCSS, designed to highlight my projects and CV in a structured, multilingual way (English and German). The CV is JSON-driven, making it easy to extend and maintain. I also experimented with modals, smooth animations, and clean responsive layouts to create a polished professional impression.",
        "de": "Dieses Portfolio habe ich mit SvelteKit und TailwindCSS entwickelt, um meine Projekte und meinen Lebenslauf in strukturierter, mehrsprachiger Form (Englisch und Deutsch) zu präsentieren. Der Lebenslauf basiert auf JSON, was die Erweiterung und Pflege erleichtert. Zudem habe ich mit Modals, sanften Animationen und sauberen, responsiven Layouts experimentiert, um einen professionellen Eindruck zu hinterlassen."
      },
      "technologies": [
        "SvelteKit",
        "TailwindCSS",
        "TypeScript",
        "JSON"
      ],
      "links": [
        {
          "label": "GitHub",
          "url": "https://github.com/Rodhor/portfolio"
        }
      ],
      "icon": "fa-solid fa-globe"
    },
    {
      "title": {
        "en": "Docs Automation",
        "de": "Docs Automation"
      },
      "descriptionShort": {
        "en": "A desktop app that automated filling out 20+ recurring Word documents while maintaining a required folder structure.",
        "de": "Eine Desktop-App, die das Ausfüllen von über 20 wiederkehrenden Word-Dokumenten automatisierte und die erforderliche Ordnerstruktur beibehielt."
      },
      "descriptionLong": {
        "en": "I created this tool to simplify the handling of more than 20 recurring Word documents that contained overlapping information. It reduced errors, ensured consistency, and saved significant time by dynamically filling out templates while preserving the mandatory folder structure. I built the GUI with CustomTKinter (CTK) so colleagues without technical knowledge could use it easily, and I distributed it as a standalone desktop app using PyInstaller. The tool was in daily use for several years and is probably still in use today.",
        "de": "Ich habe dieses Tool entwickelt, um die Bearbeitung von mehr als 20 wiederkehrenden Word-Dokumenten mit überschneidenden Informationen zu vereinfachen. Es verringerte Fehler, stellte Konsistenz sicher und sparte erheblich Zeit, indem es Vorlagen dynamisch ausfüllte und gleichzeitig die obligatorische Ordnerstruktur beibehielt. Die GUI habe ich mit CustomTKinter (CTK) erstellt, damit auch Kolleg*innen ohne technisches Wissen es einfach nutzen konnten, und ich habe es mithilfe von PyInstaller als eigenständige Desktop-App verteilt. Das Tool war über mehrere Jahre täglich im Einsatz und wird wahrscheinlich bis heute genutzt."
      },
      "technologies": [
        "Python",
        "CustomTKinter",
        "PyInstaller"
      ],
      "links": [
        {
          "label": "GitHub",
          "url": "https://github.com/Rodhor/DocsAutomation"
        }
      ],
      "icon": "fa-solid fa-file-word"
    },
    {
      "title": {
        "en": "Project Automation",
        "de": "Project Automation"
      },
      "descriptionShort": {
        "en": "Automation scripts to simplify creating and setting up new projects.",
        "de": "Automatisierungsskripte zur Vereinfachung der Erstellung und Einrichtung neuer Projekte."
      },
      "descriptionLong": {
        "en": "I originally wrote this in Bash, later rewrote it in Python after losing the script, and eventually created a new Bash version as well. The scripts automated the otherwise manual process of setting up small VBA and Python projects. They worked through interactive prompts in the terminal and managed copying or generating necessary files, including basefiles for VBA where Python couldn't directly create them. I used these scripts to speed up and simplify both personal and work-related workflows.",
        "de": "Ich habe dieses Projekt ursprünglich in Bash geschrieben, später nach Verlust des Skripts in Python neu erstellt und schließlich auch eine neue Bash-Version entwickelt. Die Skripte automatisierten den sonst manuellen Prozess der Einrichtung kleiner VBA- und Python-Projekte. Sie arbeiteten über interaktive Eingaben im Terminal und verwalteten das Kopieren oder Erstellen notwendiger Dateien, einschließlich Basisdateien für VBA, die Python nicht direkt erstellen konnte. Ich habe diese Skripte genutzt, um persönliche und arbeitsbezogene Workflows zu beschleunigen und zu vereinfachen."
      },
      "technologies": [
        "Bash",
        "Python",
        "VBA"
      ],
      "links": [
        {
          "label": "GitHub (Python)",
          "url": "https://github.com/Rodhor/Project_Automation-Python-"
        },
        {
          "label": "GitHub (Bash)",
          "url": "https://github.com/Rodhor/Project_Automation-Bash-"
        }
      ],
      "icon": "fa-solid fa-gears"
    },
    {
      "title": {
        "en": "Random Info Generator",
        "de": "Random Info Generator"
      },
      "descriptionShort": {
        "en": "A Streamlit web app for generating synthetic datasets for testing and developing.",
        "de": "Eine Streamlit-Webanwendung zur Generierung synthetischer Datensätze für Tests und Entwicklung."
      },
      "descriptionLong": {
        "en": "I built this with Python, Streamlit, Faker, and Pandas to generate synthetic datasets with customizable fields. I wanted a way to create safe test data for VBA projects without using real user information. The app lets me select fields, define custom columns, preview results, and export datasets in multiple formats (CSV, Excel, Pickle). While Streamlit was an experiment for me as an alternative to CTK, the main purpose was practical data generation.",
        "de": "Ich habe diese App mit Python, Streamlit, Faker und Pandas entwickelt, um synthetische Datensätze mit anpassbaren Feldern zu generieren. Ich wollte eine Möglichkeit haben, sichere Testdaten für VBA-Projekte zu erstellen, ohne reale Benutzerdaten zu verwenden. Die App ermöglicht es mir, Felder auszuwählen, eigene Spalten zu definieren, Ergebnisse in einer Vorschau anzuzeigen und Datensätze in mehreren Formaten (CSV, Excel, Pickle) zu exportieren. Auch wenn Streamlit für mich ein Experiment als Alternative zu CTK war, lag der Hauptzweck in der praktischen Datenerstellung."
      },
      "technologies": [
        "Python",
        "Streamlit",
        "Faker",
        "Pandas"
      ],
      "links": [
        {
          "label": "GitHub",
          "url": "https://github.com/Rodhor/RandomInfoGenerator"
        }
      ],
      "icon": "fa-solid fa-database"
    },
    {
      "title": {
        "en": "Friends App",
        "de": "Friends App"
      },
      "descriptionShort": {
        "en": "A CRUD app for managing friends, built with a separate frontend and backend.",
        "de": "Eine CRUD-App zur Verwaltung von Freunden, erstellt mit getrenntem Frontend und Backend."
      },
      "descriptionLong": {
        "en": "This was my first project with a real frontend–backend separation. I built a functional CRUD application for managing friends. While I started it from a tutorial, I extended it further to make it more complete. It gave me valuable experience integrating a JavaScript frontend with a Python backend.",
        "de": "Dies war mein erstes Projekt mit einer echten Trennung von Frontend und Backend. Ich habe eine funktionale CRUD-Anwendung zur Verwaltung von Freunden erstellt. Ich habe es zwar von einem Tutorial aus begonnen, es aber weiterentwickelt, um es vollständiger zu machen. Dadurch konnte ich wertvolle Erfahrungen bei der Integration eines JavaScript-Frontends mit einem Python-Backend sammeln."
      },
      "technologies": [
        "JavaScript",
        "React",
        "Python",
        "SQLite"
      ],
      "links": [
        {
          "label": "GitHub",
          "url": "https://github.com/Rodhor/FriendsApp"
        }
      ],
      "icon": "fa-solid fa-user-group"
    },
    {
      "title": {
        "en": "WordTemplate Script",
        "de": "WordTemplate Script"
      },
      "descriptionShort": {
        "en": "A lightweight script for filling Word templates with data from Excel.",
        "de": "Ein leichtgewichtiges Skript zum Ausfüllen von Word-Vorlagen mit Daten aus Excel."
      },
      "descriptionLong": {
        "en": "This script was a lightweight spinoff of DocsAutomation, which I used in another team. Instead of a GUI, it read data directly from an Excel file and filled Word templates accordingly. It was much simpler, but it kept the core idea of automating repetitive document work.",
        "de": "Dieses Skript war eine leichtgewichtige Abwandlung von DocsAutomation, die ich in einem anderen Team genutzt habe. Anstelle einer GUI las es Daten direkt aus einer Excel-Datei und füllte entsprechende Word-Vorlagen aus. Es war deutlich einfacher, behielt aber die Kernidee der Automatisierung repetitiver Dokumentarbeiten bei."
      },
      "technologies": [
        "Python"
      ],
      "links": [
        {
          "label": "GitHub",
          "url": "https://github.com/Rodhor/WordTemplateScript"
        }
      ],
      "icon": "fa-solid fa-file-word"
    },
    {
      "title": {
        "en": "Golang Project Automation",
        "de": "Golang Project Automation"
      },
      "descriptionShort": {
        "en": "A paused in-progress project automation tool built in Go, aiming for distributable executables with embedded filestructure templates.",
        "de": "Ein pausiertes, noch in Arbeit befindliches Projektautomatisierungstool in Go, das verteilbare ausführbare Dateien mit eingebetteten Vorlagen bereitstellen soll."
      },
      "descriptionLong": {
        "en": "This is the most ambitious version of my Project Automation series, written in Go. The goal was to embed YAML-defined folder structures, complete with files and package installs, into a distributable executable. That way teams could share consistent setups for Python and Go projects. The project is currently paused: folder creation works, but command execution and file injection are not finished. I may rewrite it from scratch with a different approach.",
        "de": "Dies ist die ambitionierteste Version meiner Project Automation-Reihe, geschrieben in Go. Ziel war es, YAML-definierte Ordnerstrukturen, einschließlich Dateien und Paketinstallationen, in eine verteilbare ausführbare Datei einzubetten. Auf diese Weise könnten Teams konsistente Setups für Python- und Go-Projekte teilen. Das Projekt ist derzeit pausiert: Die Ordnererstellung funktioniert, aber Befehlsausführung und Dateiinjektion sind noch nicht abgeschlossen. Ich plane eventuell eine komplette Neufassung mit anderem Ansatz."
      },
      "technologies": [
        "Go",
        "YAML"
      ],
      "links": [
        {
          "label": "GitHub",
          "url": "https://github.com/Rodhor/GolangProjectAutomation"
        }
      ],
      "icon": "fa-solid fa-gears"
    },
    {
      "title": {
        "en": "CDP",
        "de": "CDP"
      },
      "descriptionShort": {
        "en": "A Bashscript to streamline navigating project directories and opening them in VSCode.",
        "de": "Ein Bashskript zur Vereinfachung der Navigation durch Projektverzeichnisse und zum Öffnen in VSCode."
      },
      "descriptionLong": {
        "en": "CDP is a small Bash productivity tool I wrote to make it easier to navigate nested project structures. It lets me quickly move into project folders and open them directly in VSCode. I used it as part of my daily workflow to remove friction and speed up navigation.",
        "de": "CDP ist ein kleines Bash-Produktivitätstool, das ich geschrieben habe, um die Navigation in verschachtelten Projektstrukturen zu erleichtern. Es ermöglicht mir, schnell in Projektordner zu wechseln und diese direkt in VSCode zu öffnen. Ich habe es in meinem täglichen Workflow genutzt, um Reibungen zu verringern und die Navigation zu beschleunigen."
      },
      "technologies": [
        "Bash"
      ],
      "links": [
        {
          "label": "GitHub",
          "url": "https://github.com/Rodhor/CDP"
        }
      ],
      "icon": "fa-solid fa-terminal"
    }
  ]
}
